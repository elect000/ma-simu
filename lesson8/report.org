#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:nil
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:nil e:t
#+OPTIONS: email:nil f:nil inline:nil num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:nil toc:nil todo:nil |:t
#+TITLE: report
#+DATE: <2018-12-14 金>
#+AUTHOR: elect
#+EMAIL: elect@elect-emacs
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.1 (Org mode 9.1.6)

#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4j, 11pt]
#+LATEX_HEADER: \usepackage[dvipdfmx]{graphicx}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage{amsmath, bm}
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex


* 課題1
  実対称行列を $A$ ,  正定値対称行列 $B$ からなる一般化固有値問題を $A \bm{x} = \lambda B \bm{x}$ とする。このとき、以下の問いに答えよ。
** B のコレスキー分解を $B = R^TR$ とする。
   　このとき、一般化固有値問題の固有値・固有ベクトルと、帰着させた標準固有値問題の固有値・固有ベクトルの関係について述べよ。
   
   　 $B$ は正定値行列であることから、コレスキー分解によって得られる $R$ は正則な上三角行列である。正則であることから、 $(R^T)^{-1} = (R^{-1})^T$ であり、一般化固有問題に対し両辺に左側から $(R^T)^{-1}$ をかけると、
   #+name: eqn:1
   \begin{eqnarray}
   (R^T)^{-1} A \bm{x} &=& \lambda (R^T)^{-1} R^T R \bm{x} \notag \\
   (R^T)^{-1} A \bm{x} &=& \lambda (R (R)^{-1})^T  R \bm{x} \notag \\
   (R^T)^{-1} A \bm{x} &=& \lambda I^T  R \bm{x} \notag \\
   (R^T)^{-1} A \bm{x} &=& \lambda R \bm{x} \notag  \\
   (R^T)^{-1} A R^{-1} R \bm{x} &=& \lambda R \bm{x} \notag \\
   A' y &=& \lambda y \ \ \ \ y = R \bm{x}, A' = (R^T)^{-1} A R^{-1}
   \end{eqnarray}
   
   　 [[eqn:1][式1]] より、固有値 $\lambda$ は変わらず、固有ベクトルは元の $\bm{x}$ に対して $R$ 倍されていることがわかる。
** この一般化固有値問題の固有値 $\lambda$ は実数であることを示せ。
   　 [[eqn:1 ][式1]] の $A'$ について言及すると、これは実対称行列 $A$ に対して正方行列 R を用いて、 $A' = R^T A R$ としている。この操作によって得られる行列は実対称行列であることは以下より示せる。
   \begin{eqnarray*}
   (A')^T = (R^T A R)^T = R^T A (R^T)^T = R^T A R = A'
   \end{eqnarray*}
   　実対称行列 A' の固有値はすべて実数であることは以下より示せるので、すなわち $\lambda$ は実数である。
   \begin{eqnarray*}
   A' \bm{y} &=& \lambda \bm{y} \\
   \lambda \overline{\bm{y}}^T \bm{y} &=& \overline{\bm{y}}^T A \bm{y}\\
           &=& \overline{\bm{y}}^T \overline{A}^T \bm{y}  \ \because A = \overline{A}^T\\
           &=& \overline{(A \bm{y})}^T \bm{y} \\
           &=& \overline{(\lambda \bm{y}^T)} \bm{y} \\
           &=& \overline{\lambda} \overline{\bm{y}}^T \bm{y}
   \end{eqnarray*}
* 課題2
  一般化固有値・固有ベクトルをコレスキー分解と逆反復法によって求める。
** 行列 A, B を

\begin{eqnarray*}
A = \left (
\begin{array}{ccccc}
1&1&1&1&1\\
1&2&2&2&2\\
1&2&3&3&3\\
1&2&3&4&4\\
1&2&3&4&5
\end{array}
\right ), \ 
B = \left (
\begin{array}{ccccc}
2&1&0&0&0\\
1&2&1&0&0\\
0&1&2&1&0\\
0&0&1&2&1\\
0&0&0&1&2\\
\end{array}
\right )
\end{eqnarray*}
　とし、シフト量を 2 として、一般化固有値問題 $A\bm{x} = \lambda B \bm{x}$ の 2付近の固有値とそれに対応する固有ベクトルを求める Scilab プログラムを作成せよ。

　行列 A B の宣言
#+begin_src scilab
A = [1 1 1 1 1; 1 2 2 2 2; 1 2 3 3 3; 1 2 3 4 4; 1 2 3 4 5];
B = [2 1 0 0 0; 1 2 1 0 0; 0 1 2 1 0; 0 0 1 2 1; 0 0 0 1 2];
#+end_src

 逆反復法のアルゴリズムを行う関数
#+begin_src scilab 
function [lambdas, Xs] =  solveGeigenvalueProblem(v_0, A, B, sig)
R = chol(B)
lambdas = zeros(0)
Xs = v_0
step = 1
v = v_0
r = 1
while r > 10e-10,
  w = R * inv(A - sig * B) * R' * v;
  lambdas(step) = 1/ (v' * w) + sig;
  v = w / norm(w);
  x = inv(R) * v;
  Xs(:, step) = x / norm(x);
  r = norm(A * Xs(:, step) - lambdas(step) * B * Xs(:, step));
  step = step + 1;
end
endfunction
#+end_src

#+begin_src scilab
v_0 = repmat(1, size(A)(1), 1);
sig = 2;
[lambdas, Xs]= solveGeigenvalueProblem(v_0, A, B, sig);
#+end_src

#+begin_src scilab
--> lambdas($)
 ans  =

   1.

--> Xs(:, $)
 ans  =

  -0.2672612
   0.5345225
  -0.5345225
   0.5345225
  -0.2672612
#+end_src
　
** (2-1) のプログラムを持ちいて、シフト量を区間 [0.005, 1.995] 内で 0.01 刻みとしたとき、各シフト量で得られる固有値の変化および反復回数の変化をそれぞれグラフに描画せよ。

#+begin_src scilab
sigs = linspace(0.005, 1.995, 200);

lambda = zeros(0);
step = zeros(0);
c = 1;
for sig = sigs
[lambdas, Xs]= solveGeigenvalueProblem(v_0, A, B, sig);
lambda(c) = lambdas($);
step(c) = size(lambdas)(1);
c = c + 1;
end
plot(sigs', step)
plot(sigs', lambda)
#+end_src
#+CAPTION: 各シフト量で得られる固有値の変化
#+ATTR_LATEX: :width 10cm
[[./2-2-1.png]]
#+CAPTION: 各シフト量で得られる反復回数の変化
[[./2-2-2.png]]
* 課題3
  一般化固有値問題の行列 A, B をそれぞれ以下のとおりとする。
  \begin{eqnarray*}
  A = \left (
\begin{array}{ccc}
2&1&0\\
1&2&1\\
0&1&2
\end{array}
\right ),
B = \left (
\begin{array}{ccc}
1&0&0\\
0&1&0\\
0&0&0
\end{array}
\right )
  \end{eqnarray*}

  この時、Scilab の関数 spec を用いて、 spec(A, B), spec(B, A) を実行して得られる固有値はどのようになるのか。また、その結果について考察せよ。
#+begin_src scilab
A = [2 1 0; 1 2 1; 0 1 2]
B = [1 0 0; 0 1 0; 0 0 0]
#+end_src

#+begin_src scilab
spec(A, B)
spec(B, A)
#+end_src

#+begin_src scilab
--> spec(A, B)
 ans  =

   2.7807764  
   0.7192236  
   Inf + Nani


--> spec(B, A)
 ans  =

   0.3596118  
   1.3903882  
   0.  
#+end_src

spec(B, A) の要素について　spec(A, B) の要素の逆数になっている。
これは $Ax = \lambda B \bm{x}$ の問題が、
$B \bm{x} = \frac{1}{\lambda} A \bm{x}$ と変形できることから容易に推察できる。 
* 課題4
  図１のように表されるデータを考える。このデータを距離によって分類することでスペクトラルクラスタリングによるクラスタリングを行う。
** スペクトラルクラスタリングでは、 $L\bm{x}= \lambda D\bm{x}, L=D-W$ となる一般化固有値問題の非ゼロの最小固有値に対応する固有ベクトルの要素を用いてクラスタリングを行う。 
   　ここで、逆反復法を用いてスペクトラルクラスタリングで現れる一般化固有値問題の最小固有値に対応する固有ベクトルを求め、固有ベクトルの要素をグラフに描画せよ。

#+begin_src scilab
sigma = 0.4
[W, D] = make_WD(U, sigma);
v_0 = repmat(1,size(D)(1) ,1);
L = D - W;
[lambdas, Xs] = solveGeigenvalueProblem(v_0, L, D, 0.006);
scatter(linspace(1, size(D)(1), size(D)(1))', Xs(:, $))
#+end_src
#+CAPTION: 固有ベクトルの要素のグラフ
#+ATTR_LATEX: :width 10cm
[[./4-1.png]]

** (4-1) で求めた高ベクトルを用いて固有ベクトルの要素が閾値 $\delta$ より大きいか小さいかで２つのグループに分類し、各グループの座標点をグラフに描画せよ。
#+begin_src scilab
mu = mean(Xs(:, $));
x_a = zeros (1);
y_a = zeros (1);
x_b = zeros (1);
y_b = zeros (1);


# for i = 1:size (D) (1)
#  if Xs (i, $) > mu then 
#  x_a ($+1) = i;
#  y_a ($+1) = Xs (i, $);
#  else
#  x_b ($+1) = i;
#  y_b ($+1) = Xs (i, $);
#  end
# end

for i = 1:size (D) (1)
  if Xs (i, $) > mu then 
  x_a ($+1) = U(1, i);
  y_a ($+1) = U(2, i);
  else
  x_b ($+1) = U(1, i);
  y_b ($+1) = U(2, i);
  end
 end


scatter (x_a, y_a, 20, 'blue1')
scatter (x_b, y_b, 20, 'red1')
#+end_src
#+CAPTION: 各グループの座標点
#+ATTR_LATEX: :width 10cm
[[./4-2.png]]
